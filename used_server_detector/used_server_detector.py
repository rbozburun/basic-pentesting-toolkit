#!/usr/bin/python3

import re
import argparse
import requests
import urllib
from time import sleep


def main():
    parser = argparse.ArgumentParser(description="Directory listing vulnerability controller.")
    parser.add_argument('-f','--url_file', help="URL list file.")
    args = parser.parse_args()
    url_file = args.url_file

    f = open(url_file,'r')
    urls = f.readlines()
    f.close()

    for url in urls:
        url = str(url[:-1]) 
        print("[!] Checking Directory Listing for: {0}".format(url))
        try:
            resp = requests.get(url, timeout=7, allow_redirects=False)
            page_content = resp.content.decode('utf-8', errors="replace")
        except Exception as e:
            print("|_> URL request error, passing the next one...")
        else:
            if resp.status_code != 500:
                try:
                    response_headers = resp.headers
                    server_header = response_headers['Server']
                    if isIncludeVersion(server_header):
                        print("[+] possible server version information disclosure for: {0}".format(url))
                        with open("server_version_info_disc.txt","a+") as outF:
                            hostname = urllib.parse.urlparse(url).hostname
                            if hostname not in outF.read():
                                outF.write(hostname + " -> Server: {0}\n".format(server_header))
                except Exception as e:
                    print(e)
                    print(url)
                    print(page_content)

def isIncludeVersion(text):
    return bool(re.search(r'\d', text))

if __name__ == "__main__":
    main()